@BaseClass = Targetname
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
]

@BaseClass = Target 
[
	target(target_destination) : "Target" : : "The name of the entity to target."
]

@BaseClass = Light
[
    light(integer) : "Brightness" : 300 : "Light radius/intensity"
    color(color1) : "Light Color" : "1 1 1" : "RGB color of the light (default: white)"
    style(choices) : "Light Style" : 0 =
    [
        0 : "Normal"
        1 : "Flicker"
        2 : "Slow pulse"
        3 : "Fast pulse"
    ]
]

@PointClass base(Targetname) size(-16 -16 -24, 16 16 32) color(0 255 0) = info_player_start : "Player 1 start"
[
]

@SolidClass base(Targetname) = func_wall : "Solid wall"
[
	spawnflags(flags) =
	[
		1 : "Not solid" : 0
		2 : "Trigger" : 0
	]
]

@SolidClass base(Targetname) = func_detail : "Detail brush"
[
]

@SolidClass base(Targetname) = func_illusionary : "Non-solid brush"
[
]

@PointClass base(Targetname, Target) color(200 150 150) = info_null : "info_null (spotlight target)"
[
]

@PointClass base(Light, Targetname) color(255 255 0) = light : "Basic light"
[
]

@PointClass base(Light, Targetname) color(255 255 128) = light_dynamic : "Dynamic light"
[
    _light_lev(integer) : "Base Light Level" : 300 : "Base light level for pulsing/flickering"
]

@SolidClass base(Targetname) = func_rotate : "Rotating brush entity"
[
    speedx(float) : "Speed X" : 0 : "Rotation speed around X axis"
    speedy(float) : "Speed Y" : 0 : "Rotation speed around Y axis"
    speedz(float) : "Speed Z" : 0 : "Rotation speed around Z axis"
    wait(float) : "Wait" : 0 : "Wait behavior. Set to -1 to only rotate when triggered"
    target(target_destination) : "Target" : : "Entity to trigger when used"
]

@SolidClass base(Targetname) = func_button : "Interactive button entity"
[
    button_speed_x(float) : "Speed X" : 0 : "Movement speed along X axis"
    button_speed_y(float) : "Speed Y" : 0 : "Movement speed along Y axis"
    button_speed_z(float) : "Speed Z" : 0 : "Movement speed along Z axis"
    wait_time(float) : "Wait Time" : 1 : "Time before button returns to original position"
    button_lip(float) : "Lip" : 4 : "Button travel distance"
    target(target_destination) : "Target" : : "Entity to trigger when pressed"
    noise(sound) : "Press Sound" : : "Sound to play when button is pressed"
    noise1(sound) : "Trigger Sound" : : "Sound to play when button triggers"
    noise2(sound) : "Return Sound" : : "Sound to play when button returns"
]

@SolidClass base(BaseBrush, Angles, Target, TargetName) = func_door : "Sliding door"
[
	wait(float) : "Delay before closing (in seconds)" : "3"
	lip(float) : "Amount of door to leave sticking out of the wall (in units)" : "8"
	speed(float) : "Movement speed in units per second" : "50"
	spawnflags(flags) =
	[
		1 : "Start open" : 0
		2 : "Usable" : 0
	]
]

@SolidClass base(BaseBrush, Target, TargetName) = func_door_teleport : "Teleporting door"
[
    target(target_destination) : "Teleport destination" : : "Name of the teleport_destination entity to teleport to"
    spawnflags(flags) =
    [
        2 : "Usable" : 0
    ]
]

@PointClass base(TargetName, Angles) color(128 128 128) size(-16 -16 -16, 16 16 16) = teleport_destination : "Teleport destination point"
[
]
